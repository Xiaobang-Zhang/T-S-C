package org.maple.tsc.mappers;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.maple.tsc.models.CourseModel;
import org.maple.tsc.models.StudentCourseXrefModel;
import org.maple.tsc.models.UserModel;

public interface StudentCourseXrefModelMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_course_xref
     *
     * @mbg.generated Thu Apr 06 20:27:23 CST 2017
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_course_xref
     *
     * @mbg.generated Thu Apr 06 20:27:23 CST 2017
     */
    int insert(StudentCourseXrefModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_course_xref
     *
     * @mbg.generated Thu Apr 06 20:27:23 CST 2017
     */
    int insertSelective(StudentCourseXrefModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_course_xref
     *
     * @mbg.generated Thu Apr 06 20:27:23 CST 2017
     */
    StudentCourseXrefModel selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_course_xref
     *
     * @mbg.generated Thu Apr 06 20:27:23 CST 2017
     */
    int updateByPrimaryKeySelective(StudentCourseXrefModel record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table student_course_xref
     *
     * @mbg.generated Thu Apr 06 20:27:23 CST 2017
     */
    int updateByPrimaryKey(StudentCourseXrefModel record);
    
    // --------- Below is customized methods ----------------
    
    List<CourseModel> selectCourseLisByStudentId(Long studentId);
    
    List<UserModel> selectStudentListByCourseId(Long courseId);
    
    int deleteByStudentIdAndCourseId(@Param("studentId")Long studentId, @Param("courseId")Long courseId);
    
    List<UserModel> selectStudentListByTCXRefId(Long tcxrefId);
    
}